# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

variables:
- group: "anchore"
- group: "dockerhub"
- name: IMAGE
  value: docker.io/pvnovarese/anchorectl-azure-test:latest

pool:
  vmImage: ubuntu-latest

steps:
- checkout: self
  displayName: Checkout

- script: |
    which docker
    docker build -t $(IMAGE) .
  displayName: 'Build Docker Image'

- script: | 
    echo $(DOCKERHUB_TOKEN) | docker login -u $(DOCKERHUB_USERNAME) --password-stdin
    docker push $(IMAGE)
  displayName: 'Login to Docker Hub and Push'

- script: |
    curl -sSfL https://anchorectl-releases.anchore.io/anchorectl/install.sh | sh -s -- -b ${HOME}/.local/bin
    export PATH="${HOME}/.local/bin/:${PATH}"
  displayName: 'Install anchorectl Binary'

- script: |
    anchorectl version
    anchorectl system status
    anchorectl feed list
  displayName: 'Connectivity Check'

- script: |
    anchorectl image add --no-auto-subscribe --wait --from registry --dockerfile Dockerfile --force --annotation method=centralized $(IMAGE)
  displayName: 'Generate SBOM and Push to Anchore'

- script: |
    anchorectl image vulnerabilities $(IMAGE)
  displayName: 'Pull Vulnerability List'

- script: |
    # set "ANCHORECTL_FAIL_BASED_ON_RESULTS=true" (see above in the "env:" section) to break the pipeline here if the 
    # policy evaluation returns FAIL or add -f, --fail-based-on-results to this command for the same result
    #
    anchorectl image check --detail $(IMAGE)
  displayName: 'Pull Policy Evaluation'

